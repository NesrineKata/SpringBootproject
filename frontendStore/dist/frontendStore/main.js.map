{"version":3,"sources":["./src/app/service/cart.service.ts","./src/app/cart-item/cart-item.component.ts","./src/app/cart-item/cart-item.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/admin/produits/viewproduct/viewproduct.component.ts","./src/app/admin/produits/viewproduct/viewproduct.component.html","./src/app/admin/produits/produits.component.ts","./src/app/admin/produits/produits.component.html","./src/app/entity/Role.ts","./src/app/bs-navbar/bs-navbar.component.ts","./src/app/bs-navbar/bs-navbar.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/payment/payment.component.ts","./src/app/payment/payment.component.html","./src/app/entity/Product.ts","./src/app/bs-header/bs-header.component.ts","./src/app/bs-header/bs-header.component.html","./src/app/admin/users/viewuser/viewuser.component.ts","./src/app/admin/users/viewuser/viewuser.component.html","./src/app/_interceptors/jwt-interceptor.service.ts","./src/app/service/user.service.ts","./src/app/admin/users/adduser/adduser.component.ts","./src/app/admin/users/adduser/adduser.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/categories/categories.component.ts","./src/app/admin/categories/categories.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/productpage/productpage.component.ts","./src/app/productpage/productpage.component.html","./src/app/service/category.service.ts","./src/app/admin/users/users.component.ts","./src/app/admin/users/users.component.html","./src/app/service/product.service.ts","./src/app/entity/User.ts","./src/app/admin/produits/addproduct/addproduct.component.ts","./src/app/admin/produits/addproduct/addproduct.component.html","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/admin/categories/addcategory/addcategory.component.ts","./src/app/admin/categories/addcategory/addcategory.component.html","./src/app/entity/Category.ts","./src/app/admin/categories/viewcategory/viewcategory.component.ts","./src/app/admin/categories/viewcategory/viewcategory.component.html","./src/main.ts","./src/app/products/products.component.ts","./src/app/products/products.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\n\r\nimport {apiUrl, storeUrl} from '../../environments/environment';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {BehaviorSubject, Observable, of} from 'rxjs';\r\nimport {catchError, map, tap} from 'rxjs/operators';\r\nimport {UserService} from './user.service';\r\nimport { Item } from '../entity/Item';\r\nimport { JwtResponse } from '../entity/JwtResponse';\r\nimport { ProductInOrder } from '../entity/ProductInOrder';\r\nimport { Cart } from '../entity/Cart';\r\nimport { Product } from '../entity/Product';\r\nimport { Order } from '../entity/Order';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n\r\n    private cartUrl = `${storeUrl}/cart`;\r\n\r\n    localMap = {};\r\n\r\n\r\n    private itemsSubject: BehaviorSubject<Item[]>;\r\n    private totalSubject: BehaviorSubject<number>;\r\n    public items: Observable<Item[]>;\r\n    public total: Observable<number>;\r\n\r\n\r\n    private currentUser: JwtResponse;\r\n\r\n    constructor(private http: HttpClient,\r\n                private cookieService: CookieService,\r\n                private userService: UserService) {\r\n        this.itemsSubject = new BehaviorSubject<Item[]>(null);\r\n        this.items = this.itemsSubject.asObservable();\r\n        this.totalSubject = new BehaviorSubject<number>(null);\r\n        this.total = this.totalSubject.asObservable();\r\n        this.userService.currentUser.subscribe(user => this.currentUser = user);\r\n\r\n\r\n    }\r\n\r\n    private getLocalCart(): Product[] {\r\n        if (this.cookieService.check('cart')) {\r\n            this.localMap = JSON.parse(this.cookieService.get('cart'));\r\n            return Object.values(this.localMap);\r\n        } else {\r\n            this.localMap = {};\r\n            return [];\r\n        }\r\n    }\r\n    getOrders():Observable<any>{\r\n        const url = `${this.cartUrl}/getorders`;\r\n        return this.http.get<Order[]>(url);\r\n    }\r\n    getCart(): Observable<any> {\r\n        const url = `${this.cartUrl}/getall`;\r\n        /*\r\n        const localCart = this.getLocalCart();\r\n        if (this.currentUser) {\r\n            if (localCart.length > 0) {\r\n                return this.http.post<Cart>(url, localCart).pipe(\r\n                    tap(_ => {\r\n                        this.clearLocalCart();\r\n                    }),\r\n                    map(cart => cart.products),\r\n                    catchError(_ => of([]))\r\n                );\r\n            } else {\r\n                return this.http.get<Product[]>(url);\r\n            }\r\n        } else {\r\n            return of(localCart);\r\n        }\r\n       */ \r\n       return this.http.get<ProductInOrder[]>(url);\r\n    }\r\n\r\n    addItem(productInOrder): Observable<boolean> {\r\n       /* if (!this.currentUser) {\r\n            if (this.cookieService.check('cart')) {\r\n                this.localMap = JSON.parse(this.cookieService.get('cart'));\r\n            }\r\n            if (!this.localMap[productInOrder.productinId]) {\r\n                this.localMap[productInOrder.productId] = productInOrder.productId;\r\n            } else {\r\n                this.localMap[productInOrder.productId].count+=1;\r\n            }\r\n            this.cookieService.set('cart', JSON.stringify(this.localMap));\r\n            return of(true);\r\n        } else {\r\n         */   \r\n            const url = `${this.cartUrl}/add`;\r\n            return this.http.post<boolean>(url, {\r\n                'quantity': 1,\r\n                'productId': productInOrder.productId\r\n            });\r\n        //}\r\n    }\r\n\r\n/*    update(productInOrder): Observable<ProductInOrder> {\r\n\r\n        if (this.currentUser) {\r\n            const url = `${this.cartUrl}/${productInOrder.productId}`;\r\n            return this.http.put<ProductInOrder>(url, productInOrder.count);\r\n        }\r\n    }\r\n\r\n*/\r\n    remove(productInOrder) {\r\n        /*if (!this.currentUser) {\r\n            delete this.localMap[productInOrder.productId];\r\n            return of(null);\r\n        } else {\r\n            */\r\n           const url = `${this.cartUrl}/${productInOrder.productId}`;\r\n            return this.http.delete(url);//.pipe( );\r\n        }\r\n    }\r\n\r\n\r\n/*\r\n    checkout(): Observable<any> {\r\n        const url = `${this.cartUrl}/checkout`;\r\n        return this.http.post(url, null).pipe();\r\n    }\r\n\r\n    storeLocalCart() {\r\n        this.cookieService.set('cart', JSON.stringify(this.localMap));\r\n    }\r\n\r\n    clearLocalCart() {\r\n        console.log('clear local cart');\r\n        this.cookieService.delete('cart');\r\n        this.localMap = {};\r\n    }\r\n    }\r\n*/\r\n","import { Component, OnInit } from '@angular/core';\nimport { Product } from '../entity/Product';\nimport { CartService } from '../service/cart.service';\nimport { CommonModule } from '@angular/common';\nimport { ProductInOrder } from '../entity/ProductInOrder';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-cart-item',\n  templateUrl: './cart-item.component.html',\n  styleUrls: ['./cart-item.component.css']\n  \n})\n\nexport class CartItemComponent implements OnInit {\n \n  products:Array<ProductInOrder>;\n  totalSum: number = 0;\n  stripePromise = loadStripe(environment.stripe_key);\n\n  constructor(private cartService:CartService,private router: Router) {\n  }\n  ngOnInit() {\n    this.cartService.getCart().subscribe(\n      response => this.handleSuccessfulResponse(response),\n    );\n\n  }\n\n  handleSuccessfulResponse(response) {\n    //this.cart = response;\n    this.products=response;\n    this.products.forEach(value => {\n      this.totalSum = this.totalSum + (value.qnt * value.product.productPrice);\n    });\n    console.log(response);\n  } \n  delete(p){\n    this.cartService.remove(p.productId).subscribe(\n      response => this.handleSuccessfulResponse(response),\n    );\n  } \n  update(p){\n\n  } \n  pay(){\n    let amount=this.totalSum;\n    this.router.navigate(['payment'], { queryParams: {amount}});\n  }\n  \n}\n \n\n\n\n","<div class=\"container\">\n  <br>\n  <a  href=\"\" class=\"btn btn-primary\"><i class=\"fa fa-angle-left\"></i> Continue Shopping</a><br>\n  <p style=\"padding-top: 10px\"> To change Quantity, Edit Quantity and Click on Update button</p>\n  <table id=\"cart\" class=\"table table-hover table-condensed table-borderless\">\n    <thead>\n      <tr>\n        <th>Product</th>\n        <th>Price</th>\n        <th>Quantity</th>\n        <th>Subtotal</th>\n        <th></th>\n      </tr>\n    </thead>\n  \n  <!--\n    <div>\n    <ul > \n      <li *ngFor=\"let c of products\">\n         {{c.productName}}\n      </li>\n    </ul>\n    </div>\n  -->\n    <tr *ngFor=\"let c of products\">\n      <td>\n        {{c?.product.productName}}\n      </td>\n      <td>{{c?.product.productPrice}}$</td>\n      <td>\n\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <input type=\"number\" value=\"{{c.qnt}}\" #quant>\n            <input type=\"hidden\" value=\"0\" #prod>\n          </div>\n      \n          <div class=\"col-6\">\n            <button class=\"btn btn-info btn-sm\"(click)=\"update(c)\" >Update</button>\n          </div>\n        </div>\n      </td>\n      <td>\n       {{c.product.productPrice*c.qnt | number : '.2-2'}} $ \n\n      </td>\n      <td>\n        <button class=\"btn btn-info btn-sm\" (click)=\"delete(c)\">Delete</button>\n      </td>\n    </tr>\n \n  \n  </table>\n\n  <div class=\"row\">\n    <div class=\"col-9\">Total Sum : {{totalSum}}</div>\n    <div class=\"offset-1 col-2\"><button type=\"button\" class=\"btn btn-primary align-right\"(click)=\"pay()\" >Checkout <i\n          class=\"fa fa-angle-right\"></i></button></div>\n\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../entity/User';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  form: any = {};\n  //signupInfo: SignUpInfo;\n  isSignedUp = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n \n user:User;\n  constructor(\n   \n               private userService: UserService,\n               private router: Router) {this.user=new User() }\n\n  ngOnInit() { }\n\n  onSubmit() {\n    /*console.log(this.form);\n\n    this.signupInfo = new SignUpInfo(\n      */\n      this.form.name,\n      this.form.username,\n      this.form.email,\n      this.form.password;\n      \n      this.userService.signUp(this.form).subscribe(u => {\n        this.router.navigate(['/login']);\n      },\n        \n          e => {\n            console.log(\"error\");\n          });\n      \n    }\n    \n\n}\n","<div *ngIf=\"isSignedUp; else signupForm\">\n    Your registration is successful. Please login!\n  </div>\n  \n  <ng-template #signupForm>\n    <div class=\"row col-sm-6\" style=\"max-width:350px;\">\n      <form name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\n        <div class=\"form-group\">\n          <label for=\"name\">Your name</label>\n          <input type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]=\"form.name\" #name=\"ngModel\" required />\n          <div *ngIf=\"f.submitted && name.invalid\">\n            <div *ngIf=\"name.errors.required\">Name is required</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"username\">Username</label>\n          <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\" #username=\"ngModel\"\n            required />\n          <div *ngIf=\"f.submitted && username.invalid\">\n            <div *ngIf=\"username.errors.required\">Username is required</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\" #email=\"ngModel\" required email />\n          <div *ngIf=\"f.submitted && email.invalid\">\n            <div *ngIf=\"email.errors.required\">Email is required</div>\n            <div *ngIf=\"email.errors.email\">Email must be a valid email address</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"form.password\" #password=\"ngModel\"\n            required minlength=\"6\" />\n          <div *ngIf=\"f.submitted && password.invalid\">\n            <div *ngIf=\"password.errors.required\">Password is required</div>\n            <div *ngIf=\"password.errors.minlength\">Password must be at least 6 characters</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary\">Register</button>\n          <div *ngIf=\"f.submitted && isSignUpFailed\" class=\"alert alert-warning\">\n            Signup failed!<br/>{{errorMessage}}\n          </div>\n        </div>\n      </form>\n    </div>\n  </ng-template>\n\n<!--\n<h1  class=\"display-4 mb-5\">Sign Up</h1>\n<div style=\"width:40%; margin: 25px auto\" >\n  <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label><b>Email address</b></label>\n      <input [(ngModel)]=\"user.email\" type=\"email\" class=\"form-control form-control-lg\" id=\"email\" name=\"email\" placeholder=\"Enter email\" email required autofocus  #email=\"ngModel\">\n      <div  *ngIf=\"email.invalid && (email.dirty ||email.touched)\" >\n          <div *ngIf=\"email.errors.required\" >\n              Email is required.\n          </div>\n          <div *ngIf=\"email.errors.email\">\n              Invalid Email.\n          </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Name</b></label>\n      <input [(ngModel)]=\"user.name\" type=\"text\" class=\"form-control form-control-lg\" id=\"name\" name=\"name\" placeholder=\"Your name\" required #name=\"ngModel\">\n        <div  *ngIf=\"name.invalid && (name.dirty ||name.touched)\">\n            <div *ngIf=\"name.errors.required\">\n                Name is required.\n            </div>\n            <div *ngIf=\"name.errors.minlength\">\n                Name must be at least 3 characters long.\n            </div>\n        </div>\n        <input [(ngModel)]=\"user.username\" type=\"text\" class=\"form-control form-control-lg\" id=\"username\" name=\"username\" placeholder=\"Your username\" required #username=\"ngModel\">\n        <div  *ngIf=\"username.invalid && (username.dirty ||username.touched)\">\n            <div *ngIf=\"username.errors.required\">\n                userName is required.\n            </div>\n            <div *ngIf=\"username.errors.minlength\">\n                userName must be at least 3 characters long.\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Password</b></label>\n      <input  [(ngModel)]=\"user.password\" type=\"password\" class=\"form-control form-control-lg\" id=\"password\" name=\"password\" placeholder=\"Password\" minlength=\"3\" required #password=\"ngModel\">\n        <div  *ngIf=\"password.invalid && (password.dirty ||password.touched)\">\n            <div *ngIf=\"password.errors.required\">\n                Password is required.\n            </div>\n            <div *ngIf=\"password.errors.minlength\">\n                Password must be at least 3 characters long.\n            </div>\n        </div>\n    </div>\n   \n    <div class=\"form-group\">\n      <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!form.form.valid\" >Sign Up</button>\n    </div>\n  </form>\n</div>\n-->","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Product } from 'src/app/entity/Product';\nimport { ProductService } from 'src/app/service/product.service';\n\n@Component({\n  selector: 'app-viewproduct',\n  templateUrl: './viewproduct.component.html',\n  styleUrls: ['./viewproduct.component.css']\n})\nexport class ViewproductComponent implements OnInit {\n\n  @Input()\n  p: Product;\n  @Output()\n prodDeletedEvent = new EventEmitter();\n  constructor(private service:ProductService,private router:Router) { }\n\n  ngOnInit(): void {\n\n  }\n  deleteProduct() {\n    this.service.deleteById(this.p.productId).subscribe(\n      (user) => {\n        this.prodDeletedEvent.emit();\n        this.router.navigate(['admin', 'produits']);\n      }\n    );\n  }\n\n}\n","<div >\n    <h2>Product details</h2>\n    <table>\n      <tr>\n        <td>Product Id</td>\n        <td>   {{p.productId}}</td>\n      </tr>\n      <tr>\n        <td>Producr Name</td>\n        <td>   {{p.productName}}</td>\n      </tr>\n      <tr>\n        <td>Product Price</td>\n        <td>   {{p.productPrice}} $</td>\n      </tr>\n      <tr>\n        <td>On Stock</td>\n        <td>   {{p.stock}} </td>\n      </tr>\n      \n      <tr>\n        <img class=\"item-image\" src=\"{{p.url}}\" alt=\"\" />\n      </tr>\n\n    </table>\n    <br>\n    <a class=\"btn btn-small btn-danger\" (click)=\"deleteProduct()\"> delete</a>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Product } from 'src/app/entity/Product';\nimport { ProductService } from 'src/app/service/product.service';\n\n@Component({\n  selector: 'app-produits',\n  templateUrl: './produits.component.html',\n  styleUrls: ['./produits.component.css']\n})\nexport class ProduitsComponent implements OnInit {\n\n  products: Array<Product>;\n  //booksRecieved: Array<Book>;\n  selectedProduct: Product;\n  action: string;\n\n  constructor(private prodService: ProductService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.refreshData();\n  }\n\n  refreshData() {\n    this.prodService.getProducts().subscribe(\n      response => this.handleSuccessfulResponse(response)\n    );\n   \n   this.route.queryParams.subscribe(\n      (params) => {\n        this.action=params.action;\n        const id= params.id;\n        if (id) {\n          this.selectedProduct = this.products.find(p => p.productId ==id);\n        }\n      });\n    \n   /*\n    this.route.params.subscribe(\n      (params) => {\n        this.action = params.action;\n\t      const id = params['id'];\n        if (id) {\n          this.selectedProduct = this.products.find(p => {\n            return p.productId === +id;\n          });\n        }\n      }\n    );\n    */\n    \n  }\n\n \n  handleSuccessfulResponse(response) {\n  \n    this.products = response;\n  }\n\n  addProduct() {\n    this.selectedProduct = new Product();\n    this.router.navigate(['admin', 'produits'], { queryParams: { action: 'add' } });\n  }\n\n  viewProduct(id: number) {\n    this.router.navigate(['admin', 'produits'], { queryParams: { id, action: 'view' } });\n  }\n}\n\n\n","<h1>Products Admin</h1>\n<a class=\"btn btn-primary mb-3\" (click)=\"addProduct()\">Add New Product</a>\n<div class=\"container row\">\n  <div class=\"col-md-6\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Product Name</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let p of products\">\n          <td>{{p.productId}}</td>\n          <td>{{p.productName}}</td>\n          <td>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"viewProduct(p.productId)\">Show Details</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"col-md-6\">\n    <app-viewproduct *ngIf=\"action === 'view'\" [p]=\"selectedProduct\" (prodDeletedEvent)=\"refreshData()\"></app-viewproduct>\n    <app-addproduct *ngIf=\"action === 'add' || action === 'add'\" [p]=\"selectedProduct\" (prodAddedEvent)=\"refreshData()\"></app-addproduct>\n  </div>\n</div>","export enum Role {\r\n    Customer = 'ROLE_USER',\r\n    Manager = 'ROLE_ADMIN',\r\n    Client='ROLE_VISITOR',\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Category } from '../entity/Category';\nimport { Role } from '../entity/Role';\nimport { CategoryService } from '../service/category.service';\nimport { UserService } from '../service/user.service';\nimport { Subscription } from 'rxjs';\nimport { JwtResponse } from '../entity/JwtResponse';\n\n@Component({\n  selector: 'app-bs-navbar',\n  templateUrl: './bs-navbar.component.html',\n  styleUrls: ['./bs-navbar.component.css']\n})\nexport class BsNavbarComponent implements OnInit {\n  categories:Array<Category>;\n  manager:Role;\n  currentUserSubscription: Subscription;\n  name$;\n  name: string;\n  currentUser: JwtResponse;\n  isAdmin=false;\n  constructor(private seviceCat:CategoryService,public userService:UserService) { \n  }\n\n  ngOnInit(): void {\n    this.manager=Role.Manager;\n    this.name$ = this.userService.name$.subscribe(aName => this.name = aName);\n  this.currentUserSubscription = this.userService.currentUser.subscribe(user => {\n      this.currentUser = user;\n     this.currentUser.roles.forEach(element => {\n      if (element==Role.Manager)\n        this.isAdmin=true;        \n      });\n   \n  });\n       //console.log(\"My role is \"+GlobalConstants.role.toString());\n    \n    //console.log(\"Manager role is \"+this.manager.toString());\n    this.seviceCat.getCategories().subscribe(\n      response => this.handleSuccessfulResponse(response),\n    );\n    \n\n  }\n\n  handleSuccessfulResponse(response) {\n    this.categories = response;\n  }\n\n\n}\n","\n<div class=\"navbar nav-bar\" role=\"banner\">\n    <div class=\"container\">\n        <nav class=\"navbar-expand-lg\">\n            <div class=\"navbar-header\">\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\"\n                    aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n            </div>\n            <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n                <ul class=\"navbar-nav mr-auto\">\n                    <li *ngFor=\"let c of categories\"class=\"category nav-item dropdown\" >\n                        <a class=\"nav-link\" href=\"products/category/{{c.id}}\">\n                            {{c.libelle}}\n                        </a>\n                    </li>  \n                    <!--*ngIf=\"info.authorities==='admin'\"-->\n                    <li *ngIf=\"isAdmin\"  class=\"nav-item dropdown\" >\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\" aria-expanded=\"false\">\n                            Admin\n                        </a>\n                        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                            <a href=\"admin/users\" class=\"dropdown-item\">Users</a>\n                            <a href=\"admin/produits\" class=\"dropdown-item\">Products</a>\n                            <a href=\"admin/categories\" class=\"dropdown-item\">Orders</a>\n                        </div>\n                    </li>\n                    <li *ngIf=\"currentUser\" class=\"category nav-item dropdown\"> <a class=\"nav-link\" href=\"/profile\">\n                        Profile\n                    </a> </li>\n\n                </ul>\n            </div>\n        </nav>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { JwtResponse } from '../entity/JwtResponse';\nimport { Product} from '../entity/Product';\nimport { ProductInOrder} from '../entity/ProductInOrder';\n\nimport { CartService } from '../service/cart.service';\n\nimport { ProductService } from '../service/product.service';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  products:Array<Product>;\n  // $productsRecieved;\n  info :any;\n  currentUserSubscription: Subscription;\n  name$;\n  name: string;\n  currentUser: JwtResponse;\n  constructor(private router:Router,public userService:UserService,private prodService:ProductService,private api:CartService) {}\n  ngOnInit(){\n    this.name$ = this.userService.name$.subscribe(aName => this.name = aName);\n    this.currentUserSubscription = this.userService.currentUser.subscribe(user => {\n        this.currentUser = user;\n     \n    });\n    this.prodService.getProducts().subscribe(\n      response => this.handleSuccessfulResponse(response),\n    );\n    \n\n  }\n\n  handleSuccessfulResponse(response) {\n    this.products = response;\n    console.log(this.products);\n  }\n  addToCart(e) {\n    if(this.currentUser){\n    this.api.addItem(e).subscribe(res => {\n      console.log(res);\n    })\n    }\n    else \n      this.router.navigateByUrl(\"/login\");\n  }\n \n  \n\n /*  ngOnInit(){}\n   this.prodService.getProducts().subscribe(\n      response => this.handleSuccessfulResponse(response),\n    );\n    \n  }\n  andleSuccessfulResponse(response) {\n    this.$products = new Array<Product>();\n    //get books returned by the api call\n    this.$productsRecieved = response;\n  for (const prod of this.$productsRecieved) {\n  \n    const productwithRetrievedImageField = new Product();\n    productwithRetrievedImageField.productId=prod.id;\n    productwithRetrievedImageField.productName = prod.productName;\n    populate retrieved image field so that book image can be displayed\n    productwithRetrievedImageField.retrievedImage = 'data:image/jpeg;base64,' + prod.picByte;\n    productwithRetrievedImageField.productPrice = prod.productPrice;\n    productwithRetrievedImageField.picByte=prod.picByte;\n    this.$products.push(productwithRetrievedImageField);\n\n  }\n}\n  */\n\n}\n","<div class=\"items\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <h3 class=\"title\">TN SHOP Products</h3>                \n            </div>\n            <!-- Item #1 -->\n            <div class=\"col-md-3 col-sm-4\" *ngFor=\"let p of products \">\n<!--\n                <app-products [p]=\"p\" (productAddToCart)=\"addToCart($event)\">Loading...</app-products>\n                \n--><div class=\"item\">\n                    <a href=\"#\"><img class=\"item-image\" src=\"{{p.url}}\" alt=\"\" /></a>\n                    <h6><a href=\"#\">{{p.productName}}</a></h6>\n                    <hr />\n                    <div class=\"item-price float-left\">${{p.productPrice}}</div>\n                    <button class=\"btn float-right\"(click)=\"addToCart(p)\" >Add to Cart</button>\n                   \n                </div>\n            \n            </div>\n        </div>\n    </div>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { Role } from \"src/app/entity/Role\";\n\nexport const environment = {\n  production: false,\n  stripe_key: 'pk_test_51IFiXoAE6Ixp3fxxIVwgn4XHav4gOoAZk0gC5IJylVU01Ul9ABwRLhs13nA6lEo3fZkonyKy1YsjySFODOqdqtKL00PXOmBSr9'\n};\nexport const apiUrl = '//localhost:8080/api/auth';\nexport const storeUrl = '//localhost:8080/api/store';\nexport const adminUrl ='//localhost:8080/api/admin';\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit, ViewChild} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n/*import {\n  StripeService,\n  ElementOptions,\n  ElementsOptions,\n  StripeCardComponent\n} from 'ngx-stripe';\n*/\nimport { StripeService, StripeCardComponent } from 'ngx-stripe';\nimport {\n  StripeCardElementOptions,\n  StripeElementsOptions\n} from '@stripe/stripe-js';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\n \nexport class PaymentComponent implements OnInit{\n  @ViewChild(StripeCardComponent) card: StripeCardComponent;\n \n  cardOptions: StripeCardElementOptions = {\n    style: {\n      base: {\n        iconColor: '#666EE8',\n        color: '#31325F',\n        fontWeight: '300',\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSize: '18px',\n        '::placeholder': {\n          color: '#CFD7E0'\n        }\n      }\n    }\n  };\n \n\n  elementsOptions: StripeElementsOptions = {\n    locale: 'es'\n  };\namount=50;\nstripeTest: FormGroup;\n\nconstructor(private fb: FormBuilder,private stripeService: StripeService,private route: ActivatedRoute,private router:Router,private http:HttpClient) { }\n\nngOnInit(): void {\n  this.route.queryParams.subscribe(\n    (params) => {\n      this.amount=params.amount;\n\n  });\n  this.stripeTest = this.fb.group({\n    name: ['', [Validators.required]]\n  });\n  \n}\ncreateToken(): void {\n  const name = this.stripeTest.get('name').value;\n  this.stripeService\n    .createToken(this.card.element, { name })\n    .subscribe((result) => {\n      if (result.token) {\n        // Use the token\n        console.log(result.token.id);\n        \n       this.chargeCard(result.token.id);\n      } else if (result.error) {\n        // Error creating the token\n        console.log(result.error.message);\n      }\n    });\n\n}\nchargeCard(token: string) {\n  const headers = new HttpHeaders({'token': token,'amount':'100'});\n  this.http.post('http://localhost:8080/api/store/cart/charge', {}, {headers: headers})\n    .subscribe(resp => {\n      console.log(\"charge done \"+resp);\n    })\n}\n\n}/* implements OnInit{\n\namount:any;\ntitle = 'try';\nconstructor(private route: ActivatedRoute,private router:Router,private http:HttpClient,public stripeScriptTag: StripeScriptTag) { \n  console.log('setting publish key')\n    stripeScriptTag.setPublishableKey('pk_test_51IFiXoAE6Ixp3fxxIVwgn4XHav4gOoAZk0gC5IJylVU01Ul9ABwRLhs13nA6lEo3fZkonyKy1YsjySFODOqdqtKL00PXOmBSr9')\n    .then(()=>console.log('publish key set'))\n}\nngOnInit(): void {\n  this.route.queryParams.subscribe(\n    (params) => {\n      this.amount=params.amount;\n\n  });\n  \n}\n}\n\n/*implements  OnInit {\n  amount :any;\n \n\n  \n\n  \n\n  constructor(private route: ActivatedRoute,private router:Router,private http:HttpClient) { \n\n  }\n  \n\n  \n  ngOnInit(): void {\n    this.route.queryParams.subscribe(\n      (params) => {\n        this.amount=params.amount;\n\n    });\n\n    \n\n   \n    var styleCard =  {\n      'style': {\n        'base': {\n          'fontFamily': 'Arial, sans-serif',\n          'fontSize': '8px',\n          'color': '#C1C7CD',\n        },\n        'Invalid': {  'color': 'red', },\n      }\n    };\n    var elements =stripe.elements();\n    var card = elements.create(\"card\", { hidePostalCode: true, style: styleCard });\n    // Stripe injects an iframe into the DOM\n    card.mount(\"#card-element\");\n    card.on(\"change\", function (event) {\n      // Disable the Pay button if there are no card details in the Element\n      document.querySelector(\"button\").disabled = event.empty;\n      document.querySelector(\"#card-error\").textContent = event.error ? event.error.message : \"\";\n    });\n    card.addEventListener('change', function(event) {\n      var displayError = document.getElementById('card-errors');\n      if (event.error) {\n        displayError.textContent = event.error.message;\n      } else {\n        displayError.textContent = '';\n      }\n    });\n    function createToken() {\n      stripe.createToken(card).then(function(result) {\n        if (result.error) {\n          // Inform the user if there was an error\n          var errorElement = document.getElementById('card-errors');\n          errorElement.textContent = result.error.message;\n        } else {\n          // Send the token to your server\n         stripeTokenHandler(result.token);\n        }\n      });\n    };\n   \n    \n    // Create a token when the form is submitted.\n    var form = document.getElementById('payment-form');\n    form.addEventListener('submit', function(e) {\n      e.preventDefault();\n      createToken();\n    });\n   \n \n  }\n\n \n\n  \n \n \n}\n*/\n","<!--<div class=\"parent\">\n    <form>\n        <input type=\"text\" placeholder=\"Credit Card #\" name=\"cardNumber\">\n        <br>\n        <input type=\"text\" placeholder=\"Expiration Month\" name=\"expMonth\">\n        <br>\n        <input type=\"text\" placeholder=\"Expiration Year\" name=\"expYear\">\n        <br>\n        <input type=\"text\" placeholder=\"CVC\" name=\"cvc\">\n        <br>\n        <button (click)=\"chargeCreditCard()\">Submit</button>\n      </form>\n</div>\n-->\n<!--\n<form #checkout=\"ngForm\" (ngSubmit)=\"onSubmit(checkout)\" class=\"checkout\">\n  <div class=\"form-row\">\n    <label for=\"card-info\">Card Info</label>\n    <div id=\"card-info\" #cardInfo></div>\n\n    <div id=\"card-errors\" role=\"alert\" *ngIf=\"error\">{{ error }}</div>\n  </div>\n\n  <button type=\"submit\">Pay $5</button>\n</form>\n-->\n<!--\n<form #checkout=\"ngForm\" (ngSubmit)=\"onSubmit(checkout)\" class=\"checkout\">\n\t<div class=\"form-row\">\n\t\t<label for=\"card-info\">listen to my heart</label>\n\t\t<div id=\"card-info\" #cardInfo></div>\n\n\t\t<div id=\"card-errors\" role=\"alert\" *ngIf=\"error\">{{ error }}</div>\n\t</div>\n\n\t<button type=\"submit\">Pay $5</button>\n</form>\n-->\n <!-- Display a payment form -->\n <!--The content below is only a placeholder and can be replaced.-->\n <form novalidate (ngSubmit)=\"createToken()\" [formGroup]=\"stripeTest\">\n  <input type=\"text\" formControlName=\"name\" placeholder=\"Enter ur name\">\n  <br>\n  <ngx-stripe-card containerClass=\"example\"\n    [options]=\"cardOptions\"\n    [elementsOptions]=\"elementsOptions\"\n  ></ngx-stripe-card>\n <br>\n  <button type=\"submit\">\n    Pay\n  </button>\n</form>","import { Category } from \"./Category\";\r\n\r\nexport class Product {\r\n    productId:number;\r\n    productName:string ;\r\n    productPrice:number ;\r\n    url:string;\r\n    stock:number;\r\n    avaibility :number;\r\n    category:number;\r\n    //retrievedImage: string;\r\n    \r\n  \r\n  }","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { JwtResponse } from '../entity/JwtResponse';\nimport { Role } from '../entity/Role';\nimport { User } from '../entity/User';\nimport { CategoryService } from '../service/category.service';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-bs-header',\n  templateUrl: './bs-header.component.html',\n  styleUrls: ['./bs-header.component.css']\n})\nexport class BsHeaderComponent implements OnInit {\n  info: any;\n  currentUserSubscription: Subscription;\n    name$;\n    name: string;\n    currentUser: JwtResponse;\n    root = '/';\n    Role = Role;\n    values:string;\n    u:User;\n    constructor(private userService: UserService,\n      private router: Router,private cat:CategoryService \n) {\n  //window.location.reload();\n\n}\n\nngOnInit() {\n  this.name$ = this.userService.name$.subscribe(aName => this.name = aName);\n  this.currentUserSubscription = this.userService.currentUser.subscribe(user => {\n      this.currentUser = user;\n     // if (!user || user.role == Role.Customer) {\n          this.root = '';\n     // } else {\n        //  this.root = '/seller';\n     // }\n  });\n\n}\n isLoggedIn(){\n   if(this.currentUser)\n      this.router.navigateByUrl(\"/cart\");\n    else\n     this.router.navigateByUrl(\"/login\");\n }\n  logout() {\n   this.userService.logout();\n   // window.location.reload();\n  }\n  onKey(event: any) { \n    this.values = event.target.value;\n    console.log(\"this is the event \"+event.target.value);\n  }\n  refreshHome(){\n    console.log(this.values);\n    this.router.navigate(['searchhome'], { queryParams: {str: this.values } });\n    \n  }\n\n \n /* private setUserName() {\n    if (this.authenticationService.getUserName() != null) {\n      this.userAccount = this.authenticationService.getUserName();\n      this.showLoginButton = false;\n    } else {\n      this.showLoginButton = true;\n    }\n   \n  }\n   */\n  \n\n}\n","\n<header>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <div class=\"logo\">\n                    <h1><a href=\"/\">TNShop</a></h1>\n                </div>\n            </div>\n            <div class=\"col-md-7\">\n                <form role=\"form\">\n                    <div class=\"input-group search\">\n                        <input class=\"form-control\"(keyup)=\"onKey($event)\" type=\"search\" name=\"searchQuery\" placeholder=\"search\">\n                        <span class=\"input-group-append\">\n                            <button class=\"btn btn-search\" type=\"submit\">\n                                <i class=\"fa fa-search\"></i>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n            <div class=\"login col-md-2\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <a  href=\"/cart\"><i class=\"cart-icon fa fa-shopping-cart\"></i>\n                            <span class='badge badge-warning' id='lblCartCount'></span>\n                        </a>\n                    </div>\n                    <div *ngIf=\"!currentUser\" class=\"col-md-6\"><a href=\"/login\" class=\"btn\">Login</a></div>\n                    <!--<div *ngIf=\"currentUser\" class=\"col-md-6\"><a href=\"\" class=\"btn\">{{currentUser.username}}</a></div>\n                    -->\n                    <div *ngIf=\"currentUser\" class=\"col-md-6\" ><a (click)=\"logout()\" class=\"btn\"href=\"/\">Logout</a></div>\n                    \n               \n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/entity/User';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-viewuser',\n  templateUrl: './viewuser.component.html',\n  styleUrls: ['./viewuser.component.css']\n})\nexport class ViewuserComponent implements OnInit {\n  @Input()\n  u: User;\n  @Output()\n  userDeletedEvent = new EventEmitter();\n  constructor(private http:UserService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n  deleteUser() {\n    this.http.deleteUser(this.u.id).subscribe(\n      (u) => {\n        this.userDeletedEvent.emit();\n        this.router.navigate(['admin', 'users']);\n      }\n    );\n  }\n}\n","<div class=\"userDetails\">\n    <h2>User details</h2>\n  \n    <table>\n      <tr>\n        <td>User Id</td>\n        <td>{{u.id}}</td>\n      </tr>\n      <tr>\n        <td>Username</td>\n        <td>{{u.username}}</td>\n      </tr>\n      <tr>\n        <td>User Email </td>\n        <td>{{u.email}}</td>\n      </tr>\n  \n    </table>\n    <br>\n    <a class=\"btn btn-small btn-danger\" (click)=\"deleteUser()\"> delete</a>\n  </div>","import {Injectable} from '@angular/core';\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HTTP_INTERCEPTORS} from \"@angular/common/http\";\r\nimport {BehaviorSubject, Observable} from \"rxjs\";\r\nimport { UserService } from '../service/user.service';\r\nconst TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\r\n\r\n\r\n@Injectable()\r\n\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  \r\n    constructor(private userService: UserService\r\n    ) {\r\n\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n        // add authorization header with jwt token if available\r\n       /* const currentUser = this.userService.currentUserValue;\r\n        if (currentUser && currentUser.accessToken) {\r\n            console.log(\"current user is :\",currentUser.username);\r\n\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `${currentUser.type} ${currentUser.accessToken}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n        }\r\n        return next.handle(request);\r\n        */\r\n       const currentUser = this.userService.currentUserValue;\r\n       let token;\r\n       if(currentUser!=null){\r\n        token = currentUser.accessToken;\r\n       }\r\n        let authReq = request;\r\n        if (token != null) {\r\n          // for Spring Boot back-end\r\n          authReq = request.clone({ headers: request.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n            console.log('im the user and im already connected');\r\n        }\r\n        else \r\n            console.log('im not sure of being connected');\r\n\r\n        return next.handle(authReq);\r\n     \r\n    }\r\n}\r\nexport const authInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n  ];","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, of, Subject} from 'rxjs';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport { JwtResponse } from '../entity/JwtResponse';\r\nimport {adminUrl, apiUrl} from '../../environments/environment';\r\nimport { User } from '../entity/User';\r\n\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n  @Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n    private currentUserSubject: BehaviorSubject<JwtResponse>;\r\n    public currentUser: Observable<JwtResponse>;\r\n    public nameTerms = new Subject<string>();\r\n    public name$ = this.nameTerms.asObservable();\r\n    constructor(private http: HttpClient,\r\n                private cookieService: CookieService) {\r\n        const memo = localStorage.getItem('currentUser');\r\n        this.currentUserSubject = new BehaviorSubject<JwtResponse>(JSON.parse(memo));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n        cookieService.set('currentUser', memo);\r\n    }\r\n    getUserByUsername(username):Observable<any>{\r\n        const url = `${apiUrl}/getbyusername/${username}`;\r\n        return this.http.get<User>(url);\r\n\r\n    }\r\n    get currentUserValue() {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n\r\n    login(credentials): Observable<JwtResponse> {\r\n      /*  return this.http.post(\"http://localhost:8080/api/auth/login\", {\r\n          username: credentials.username,\r\n          password: credentials.password\r\n        }, httpOptions);\r\n    */\r\n   return this.http.post<any>(\"http://localhost:8080/api/auth/login\",  {\r\n    username: credentials.username,\r\n    password: credentials.password\r\n  }).pipe(\r\n    tap(user => {\r\n        if (user && user.accessToken) {\r\n            this.cookieService.set('currentUser', JSON.stringify(user));\r\n            localStorage.setItem('currentUser', JSON.stringify(user));\r\n           /* if (loginForm.remembered) {\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n            }*/\r\n            //console.log((user.roles[0]));\r\n            this.nameTerms.next(user.username);\r\n            this.currentUserSubject.next(user);\r\n\r\n            return user;\r\n        }\r\n    }),\r\n    catchError(err=>\"error\"))\r\n    }\r\n    \r\n    signUp(user): Observable<any> {\r\n        return this.http.post(\"http://localhost:8080/api/auth/register\", {\r\n          username: user.username,\r\n          name:user.name,\r\n          email: user.email,\r\n          password: user.password\r\n        }/*, httpOptions*/);\r\n      }\r\n\r\n\r\n      \r\n/*\r\n    login(loginForm): Observable<JwtResponse> {\r\n        //const url = `${apiUrl}/login`;\r\n        const url=\"http://localhost:8080/api/auth/login\";\r\n        return this.http.post<JwtResponse>(url, loginForm).pipe(\r\n            tap(user => {\r\n                if (user && user.accessToken) {\r\n                    this.cookieService.set('currentUser', JSON.stringify(user));\r\n                    if (loginForm.remembered) {\r\n                        localStorage.setItem('currentUser', JSON.stringify(user));\r\n                    }\r\n                    console.log((user.username));\r\n                    this.nameTerms.next(user.username);\r\n                    this.currentUserSubject.next(user);\r\n                    return user;\r\n                }\r\n            }),\r\n            catchError(this.handleError('Login Failed', null))\r\n        );\r\n    }\r\n*/\r\n    logout() {\r\n        this.currentUserSubject.next(null);\r\n        localStorage.removeItem('currentUser');\r\n        this.cookieService.delete('currentUser');\r\n        this.cookieService.delete('cart');\r\n    }\r\n/*\r\n    signUp(signUpForm): Observable<> {\r\n       // const url = `${apiUrl}/register`;\r\n        const url=\"http://localhost:8080/api/auth/register\";\r\n        return this.http.post<>(url, signUpForm);\r\n    }\r\n*/\r\n    update(user: User): Observable<User> {\r\n        const url = `${apiUrl}/profile`;\r\n        return this.http.put<User>(url, user);    }\r\n\r\n    get(email: string): Observable<User> {\r\n        const url = `${apiUrl}/getbyusername/${email}`;\r\n        return this.http.get<User>(url);\r\n    }\r\n\r\n    /**\r\n     * Handle Http operation that failed.\r\n     * Let the app continue.\r\n     * @param operation - name of the operation that failed\r\n     * @param result - optional value to return as the observable result\r\n     */\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            console.log(error); // log to console instead\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n    getUsers():Observable<User[]>{\r\n        const url=`${adminUrl}/get`;\r\n        return this.http.get<User[]>(url);\r\n    }\r\n   deleteUser(id){\r\n       return this.http.delete(\"http://localhost:8080/api/auth/delete\"+id);\r\n   }  \r\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { User } from 'src/app/entity/User';\n\n@Component({\n  selector: 'app-adduser',\n  templateUrl: './adduser.component.html',\n  styleUrls: ['./adduser.component.css']\n})\nexport class AdduserComponent implements OnInit {\n  @Input()\n  u: User;  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>adduser works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontendStore';\n}\n","<div>\n  <app-bs-header></app-bs-header>\n  <app-bs-navbar></app-bs-navbar>\n  <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Category } from 'src/app/entity/Category';\nimport { CategoryService } from 'src/app/service/category.service';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  categories: Array<Category>;\n  //booksRecieved: Array<Book>;\n  selectedCategory: Category;\n  action: string;\n\n  constructor(private catService: CategoryService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n\n    ngOnInit() {\n      this.refreshData();\n    }\n  \n    refreshData() {\n      this.catService.getCategories().subscribe(\n        response => this.handleSuccessfulResponse(response)\n      );\n     \n     this.route.queryParams.subscribe(\n        (params) => {\n          this.action=params.action;\n          const id= params.id;\n          if (id) {\n            this.selectedCategory = this.categories.find(p => p.id ==id);\n          }\n        });\n  \n    }\n  \n   \n    handleSuccessfulResponse(response) {\n      \n      this.categories = response;\n    }\n  \n    addCategory() {\n      this.selectedCategory = new Category();\n      this.router.navigate(['admin', 'categories'], { queryParams: { action: 'add' } });\n    }\n  \n    viewCategory(id: number) {\n      this.router.navigate(['admin', 'categories'], { queryParams: { id, action: 'view' } });\n    }\n  }","<h1>Categories Admin</h1>\n<a class=\"btn btn-primary mb-3\" (click)=\"addCategory()\">Add New Category</a>\n<div class=\"container row\">\n  <div class=\"col-md-6\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Libelle</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let c of categories\">\n          <td>{{c.id}}</td>\n          <td>{{c.libelle}}</td>\n          <td>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"viewCategory(c.id)\">Show Details</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"col-md-6\">\n    <app-viewcategory *ngIf=\"action === 'view'\" [c]=\"selectedCategory\" (categoryDeletedEvent)=\"refreshData()\"></app-viewcategory>\n    <app-addcategory *ngIf=\"action === 'add' || action === 'add'\" [c]=\"selectedCategory\" (categoryAddedEvent)=\"refreshData()\"></app-addcategory>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { JwtResponse } from '../entity/JwtResponse';\nimport { Order } from '../entity/Order';\nimport { User } from '../entity/User';\nimport { CartService } from '../service/cart.service';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  currentUserSubscription: Subscription;\n  name$;\n  name: string;\n  currentUser: JwtResponse;\n  orders:Order[];\n  user:User;\n  constructor(public userService:UserService,private catService:CartService) { }\n\n  ngOnInit(): void {\n    this.name$ = this.userService.name$.subscribe(aName => this.name = aName);\n  this.currentUserSubscription = this.userService.currentUser.subscribe(user => {\n      this.currentUser = user;\n   \n  });\n    this.userService.getUserByUsername(this.currentUser.username).subscribe(\n      u=>{\n      this.user=u;\n  });\n  this.catService.getOrders().subscribe(\n    response=>this.handleSuccessfulResponse(response)\n);\n\n}\n\nhandleSuccessfulResponse(response){\nthis.orders=response;\n}\nedit(id){\n\n}\n}\n\n\n\n\n","<h1>Profile</h1>\n<div class=\"container row\">\n  <div class=\"col-md-6\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>Username</th> \n          <th>Email</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr >\n          <td>{{currentUser.username}}</td>\n          <td>{{user.email}}</td>\n\n          <td>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"edit(user.id)\">Edit Details</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"col-md-6\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>Order Amount</th>\n          <th>Date</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let o of orders\">\n            <td>{{o.amount}}</td>\n            <td>{{o.date}}</td>\n          </tr>\n        </tbody>\n    </table>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BsHeaderComponent } from './bs-header/bs-header.component';\nimport { BsNavbarComponent } from './bs-navbar/bs-navbar.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { RouterModule } from '@angular/router';\nimport { ProductsComponent } from './products/products.component';\nimport { ProduitsComponent } from './admin/produits/produits.component';\nimport { ViewproductComponent } from './admin/produits/viewproduct/viewproduct.component';\nimport { AddproductComponent } from './admin/produits/addproduct/addproduct.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { CartItemComponent } from './cart-item/cart-item.component';\nimport { CookieService } from 'ngx-cookie-service';\nimport { authInterceptorProviders } from './_interceptors/jwt-interceptor.service';\nimport { UsersComponent } from './admin/users/users.component';\nimport { AdduserComponent } from './admin/users/adduser/adduser.component';\nimport { ViewuserComponent } from './admin/users/viewuser/viewuser.component';\nimport { CategoriesComponent } from './admin/categories/categories.component';\nimport { ViewcategoryComponent } from './admin/categories/viewcategory/viewcategory.component';\nimport { AddcategoryComponent } from './admin/categories/addcategory/addcategory.component';\nimport { ProductpageComponent } from './productpage/productpage.component';\nimport { PaymentComponent } from './payment/payment.component';\n\nimport { NgxStripeModule } from 'ngx-stripe';\nimport { SearchComponent } from './search/search.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BsHeaderComponent,\n    BsNavbarComponent,\n    HomeComponent,\n    ProductsComponent,\n    ProduitsComponent,\n    ViewproductComponent,\n    AddproductComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    CartItemComponent,\n    UsersComponent,\n    AdduserComponent,\n    ViewuserComponent,\n    CategoriesComponent,\n    ViewcategoryComponent,\n    AddcategoryComponent,\n    ProductpageComponent,\n    PaymentComponent,\n    SearchComponent,\n  ],\n  imports: [\n    NgxStripeModule.forRoot('pk_test_51IFiXoAE6Ixp3fxxIVwgn4XHav4gOoAZk0gC5IJylVU01Ul9ABwRLhs13nA6lEo3fZkonyKy1YsjySFODOqdqtKL00PXOmBSr9'),\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n  \n\n\n    RouterModule.forRoot([ {path:'', component: HomeComponent},\n    {path:'products/category/:id', component: ProductsComponent},\n    {path:'admin/produits',component:ProduitsComponent},\n    { path: 'login', component: LoginComponent },\n    { path: 'signup', component: RegisterComponent },\n    { path: 'cart', component: CartItemComponent },\n    {path:'admin/users',component:UsersComponent},\n    {path:'admin/categories',component:CategoriesComponent},\n    { path: 'payment', component: PaymentComponent },\n    {path:'searchhome',component:SearchComponent},\n    {path:'profile',component:ProfileComponent},\n\n\n    \n\n\n   \n  ]),\n  ],\n  providers: [CookieService,\n    authInterceptorProviders],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-productpage',\n  templateUrl: './productpage.component.html',\n  styleUrls: ['./productpage.component.css']\n})\nexport class ProductpageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>productpage works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Category } from '../entity/Category';\nimport { Product } from '../entity/Product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private http: HttpClient) { }\n  getCategories(){\n    return this.http.get<Category[]>(\"http://localhost:8080/api/store/categories/get\");\n  }\n  getCategory(id:number){\n    return this.http.get<Category>(\"http://localhost:8080/api/store/categories/\"+id);\n  }\n  getProductSearch(car:string){\n    return this.http.get<Product[]>(\"http://localhost:8080/api/store/categories/search/\"+car);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/entity/User';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  users: Array<User>;\n  //booksRecieved: Array<Book>;\n  selectedUser: User;\n  action: string;\n\n  constructor(private userService: UserService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n\n    ngOnInit() {\n      this.refreshData();\n    }\n  \n    refreshData() {\n      this.userService.getUsers().subscribe(\n        response => this.handleSuccessfulResponse(response)\n      );\n     \n     this.route.queryParams.subscribe(\n        (params) => {\n          this.action=params.action;\n          const id= params.id;\n          if (id) {\n            this.selectedUser = this.users.find(p => p.id ==id);\n          }\n        });\n  \n    }\n  \n   \n    handleSuccessfulResponse(response) {\n      \n      this.users = response;\n    }\n  \n    addUser() {\n      this.selectedUser = new User();\n      this.router.navigate(['admin', 'users'], { queryParams: { action: 'add' } });\n    }\n  \n    viewUser(id: number) {\n      this.router.navigate(['admin', 'users'], { queryParams: { id, action: 'view' } });\n    }\n  }","<h1>Users Admin</h1>\n<a class=\"btn btn-primary mb-3\" (click)=\"addUser()\">Add New User</a>\n<div class=\"container row\">\n  <div class=\"col-md-6\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>User Name</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let u of users\">\n          <td>{{u.id}}</td>\n          <td>{{u.username}}</td>\n          <td>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"viewUser(u.id)\">Show Details</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"col-md-6\">\n    <app-viewuser *ngIf=\"action === 'view'\" [u]=\"selectedUser\" (userDeletedEvent)=\"refreshData()\"></app-viewuser>\n    <app-adduser *ngIf=\"action === 'add' || action === 'add'\" [u]=\"selectedUser\" (userAddedEvent)=\"refreshData()\" (userDeletedEvent)=\"refreshData()\"></app-adduser>\n  </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Product } from '../entity/Product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http:HttpClient) {\n   }\n   getProducts(){\n     return this.http.get<Product[]>(\"http://localhost:8080/api/store/products/get\");\n   }\n   getProductsByCat(id:number){\n    return this.http.get<Product[]>('http://localhost:8080/api/store/products/getprodbycat/'+id);\n  }\n  getproductById(id:number){\n    return this.http.get<Product>('http://localhost:8080/api/store/products/getproduct/'+id);\n  }\n  addProduct(p:Product){\n    return this.http.post<Product>('http://localhost:8080/api/store/products/add',p);\n  }\n  deleteById(id:number){\n    return this.http.delete<Product>('http://localhost:8080/api/store/products/delete/'+id);\n  }\n  updateProduct(p:Product){\n    return this.http.put<Product>('http://localhost:8080/api/store/products/update',p);\n  }\n\n}\n","import { Role } from \"./Role\";\r\n\r\nexport class User{\r\n    id:number;\r\n    email: string;\r\n    username: string;\r\n    name: string;\r\n    password: string;\r\n    role: String[];\r\n    constructor(){\r\n       \r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Category } from 'src/app/entity/Category';\nimport { Product } from 'src/app/entity/Product';\nimport { CategoryService } from 'src/app/service/category.service';\nimport { ProductService } from 'src/app/service/product.service';\n\n@Component({\n  selector: 'app-addproduct',\n  templateUrl: './addproduct.component.html',\n  styleUrls: ['./addproduct.component.css']\n})\nexport class AddproductComponent implements OnInit {\n  @Input()\n  p: Product;\n  @Output()\n  prodAddedEvent= new EventEmitter();  \n  imgURL: string;\n  prod:Product;\n  categories:Array<Category>;\n  selectedCat=1;\n\n  constructor(private serviceCat:CategoryService,private  http:ProductService,private router:Router) { }\n \n  ngOnInit(): void {\n    this.serviceCat.getCategories().subscribe(\n      response => this.handleSuccessfulResponse(response),\n    );\n   \n  \n  }\n  onChange(val) {\n    this.selectedCat=val;\n  \n}\n\n  handleSuccessfulResponse(response) {\n    this.categories = response;\n   \n  }\n\n  saveProduct(){\n      this.p.avaibility=1;\n      this.prod=new Product();\n    //  let c:Category;\n      //this.p.url=this.imgURL;\n     \n     /* this.categories.forEach(e=>{\n          if(e.id==this.selectedCat){\n            c=e;  \n          }\n      })\n     \n     this.prod.avaibility=1;\n     this.prod.url=this.imgURL;\n     this.prod.category=this.selectedCat;\n     this.prod.stock=this.p.stock;\n     this.prod.productName=this.p.productName;\n     this.prod.productPrice=this.p.productPrice\n      */\n     this.p.category=this.selectedCat;\n\n       console.log(this.p);\n       console.log(this.prod);\n      this.http.addProduct(this.p).subscribe(\n          (p) => {\n            this.prodAddedEvent.emit();\n            this.router.navigate(['admin', 'produits']);\n          }\n        );\n      \n    }\n   \n\n  public onUrlChanged(event) {\n    console.log(event);\n    this.imgURL =event.target.value;\n    console.log(this.imgURL);\n    console.log( event.target.value);\n\n  }\n}\n","<h1>Add Product Admin</h1>\n\n<form  >\n  <label for=\"name\">Name</label>\n  <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Product Name\" name=\"name\" [(ngModel)]=\"p.productName\" >\n\n  <label for=\"price\">Price</label>\n  <input type=\"text\" class=\"form-control\" id=\"price\" placeholder=\"Product price\" name=\"price\" [(ngModel)]=\"p.productPrice\">\n\n  <label for=\"stck\">Stock</label>\n  <input type=\"number\" class=\"form-control\" id=\"stck\" placeholder=\"stock\" name=\"stck\" [(ngModel)]=\"p.stock\">\n\n <!--<select [(ngModel)]=\"selectedCat\"  #device (change)=\"onChange($event, device.value)\">\n --> \n <select #selectElem (change)=\"onChange(selectElem.value)\">\n  <option *ngFor=\"let c of categories\" [value]=\"c.id\">{{c.libelle}}</option>\n  </select>\n\n\n    <br>\n    <input type=\"text\"    name=\"url\" [(ngModel)]=\"p.url\" (focusout)=\"onUrlChanged($event)\">\n    <img *ngIf=\"imgURL\" [src]=\"imgURL\" height=\"200\" width=\"200\" >\n\n  <br>\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"saveProduct()\">Save Product</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Product } from '../entity/Product';\nimport { CartService } from '../service/cart.service';\nimport { CategoryService } from '../service/category.service';\nimport { ProductService } from '../service/product.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  products:Array<Product>;\n  // $productsRecieved;\n  info :any;\n  car :string;\n  constructor(private route:ActivatedRoute,private prodService:ProductService,private api:CartService,private catService:CategoryService) {}\n  ngOnInit(){\n    this.car=this.route.snapshot.paramMap.get('str');\n     \n    this.catService.getProductSearch(this.car).subscribe(\n      response => this.handleSuccessfulResponse(response),\n    );\n  }\n\n  handleSuccessfulResponse(response) {\n    this.products = response;\n    console.log(this.products);\n  }\n  addToCart(e) {\n    this.api.addItem(e).subscribe(res => {\n      console.log(res);\n    })\n  }\n \n  \n\n /*  ngOnInit(){}\n   this.prodService.getProducts().subscribe(\n      response => this.handleSuccessfulResponse(response),\n    );\n    \n  }\n  andleSuccessfulResponse(response) {\n    this.$products = new Array<Product>();\n    //get books returned by the api call\n    this.$productsRecieved = response;\n  for (const prod of this.$productsRecieved) {\n  \n    const productwithRetrievedImageField = new Product();\n    productwithRetrievedImageField.productId=prod.id;\n    productwithRetrievedImageField.productName = prod.productName;\n    populate retrieved image field so that book image can be displayed\n    productwithRetrievedImageField.retrievedImage = 'data:image/jpeg;base64,' + prod.picByte;\n    productwithRetrievedImageField.productPrice = prod.productPrice;\n    productwithRetrievedImageField.picByte=prod.picByte;\n    this.$products.push(productwithRetrievedImageField);\n\n  }\n}\n  */\n\n}\n","<div class=\"items\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <h3 class=\"title\"></h3>                \n            </div>\n            <!-- Item #1 -->\n            <div class=\"col-md-3 col-sm-4\" *ngFor=\"let p of products \">\n<!--\n                <app-products [p]=\"p\" (productAddToCart)=\"addToCart($event)\">Loading...</app-products>\n                \n--><div class=\"item\">\n                    <a href=\"#\"><img class=\"item-image\" src=\"{{p.url}}\" alt=\"\" /></a>\n                    <h6><a href=\"#\">{{p.productName}}</a></h6>\n                    <hr />\n                    <div class=\"item-price float-left\">${{p.productPrice}}</div>\n                    <button class=\"btn float-right\"(click)=\"addToCart(p)\" >Add to Cart</button>\n                   \n                </div>\n            \n            </div>\n        </div>\n    </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {};\n\n  isLoggedIn:boolean;\n  isInvalid: boolean;\n  isLogout: boolean;\n  submitted = false;\n  \n  returnUrl = '/';\n  roles: string[] = [];\n  constructor(private userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    \n    let params = this.route.snapshot.queryParamMap;\n    this.isLogout = params.has('logout');\n    this.returnUrl = params.get('returnUrl');\n    \n  }\n\n  onSubmit() {\n    \n        // this.loginInfo = new AuthLoginInfo(\n          this.form.username,\n          this.form.password;\n          this.userService.login(this.form).subscribe(\n            user => {\n                if (user) {\n                    this.router.navigateByUrl(this.returnUrl);\n                } else {\n                   // this.isLogout = false;\n                    this.isInvalid = true;\n                }\n\n            }\n        );\n    \n  }\n\n\n}\n","<div *ngIf=\"isLoggedIn; else isLogout\">\n  Logged in as {{roles}}.\n</div>\n\n<ng-template #isLogout>\n  <div class=\"row col-sm-6\" style=\"max-width:350px;\">\n    <form name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\" #username=\"ngModel\"\n          required />\n        <div *ngIf=\"f.submitted && username.invalid\">\n          <div *ngIf=\"username.errors.required\">Username is required</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"form.password\" #password=\"ngModel\"\n          required minlength=\"6\" />\n        <div *ngIf=\"f.submitted && password.invalid\">\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">Password must be at least 6 characters</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary\">Login</button>\n        <div *ngIf=\"f.submitted && isLoginFailed\" class=\"alert alert-danger\">\n          Login failed: {{errorMessage}}\n        </div>\n      </div>\n    </form>\n    <hr />\n    <p>Don't have an account?</p>\n    <a href=\"/signup\" class=\"btn btn-success\">Sign Up</a>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-addcategory',\n  templateUrl: './addcategory.component.html',\n  styleUrls: ['./addcategory.component.css']\n})\nexport class AddcategoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>addcategory works!</p>\n","export class Category {\r\n    id: number;\r\n    libelle: string;\r\n\r\n  }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-viewcategory',\n  templateUrl: './viewcategory.component.html',\n  styleUrls: ['./viewcategory.component.css']\n})\nexport class ViewcategoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>viewcategory works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { repeat } from 'rxjs/operators';\nimport { Category } from '../entity/Category';\nimport { JwtResponse } from '../entity/JwtResponse';\nimport { Product } from '../entity/Product';\nimport { CartService } from '../service/cart.service';\nimport { CategoryService } from '../service/category.service';\nimport { ProductService } from '../service/product.service';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  products:Array<Product>;\n  selectedCatId:number;\n  category:Category;\n  currentUserSubscription: Subscription;\n  name$;\n  name: string;\n  currentUser: JwtResponse;\n // @Input() public p;\n  //@Output() productAddToCart: EventEmitter<Product> = new EventEmitter<Product>();\n  constructor(private router:Router,public userService:UserService,private catService:CategoryService ,private route: ActivatedRoute,private prodService:ProductService,private api:CartService) { \n  }\n  ngOnInit(){\n    this.name$ = this.userService.name$.subscribe(aName => this.name = aName);\n  this.currentUserSubscription = this.userService.currentUser.subscribe(user => {\n      this.currentUser = user;\n   \n  });\n    this.route.params.subscribe(\n      params => {console.log(params);\n        this.selectedCatId=params.id;}\n    );\n  this.prodService.getProductsByCat(this.selectedCatId).subscribe(\n    response => this.handleSuccessfulResponse(response),\n  );\n  this.catService.getCategory(this.selectedCatId).subscribe(\n      response=>this.handleSuccessfulResponseCat(response)\n  );\n\n}\n\nhandleSuccessfulResponseCat(response){\n  this.category=response;\n}\nhandleSuccessfulResponse(response) {\n  this.products = response;\n  console.log(\"hello\");\n  for (let p of this.products ){\n    console.log(p.productName);\n  }\n}\naddToCart(e) {\n  if(this.currentUser)\n    this.api.addItem(e).subscribe(res => {\n      console.log(res);\n    })\n  else \n  this.router.navigateByUrl(\"/login\");\n}\n/*addToCart() {\n  this.productAddToCart.emit(this.p);\n}\n*/\n}\n","<div class=\"items\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <h3 class=\"title\">List of  {{category.libelle}}</h3>                \n            </div>\n            <div class=\"col-md-3 col-sm-4\" *ngFor=\"let p of products \">\n                <div class=\"item\">\n                \n                    <a href=\"#\"><img class=\"item-image\" src=\"{{p.url}}\" alt=\"\" /></a>\n                    <h6><a href=\"#\">{{p.productName}}</a></h6>\n                    <hr />\n                    <div class=\"item-price float-left\">${{p.productPrice}}</div>\n                    <button  (click)=\"addToCart(p)\"class=\"btn float-right\">Add to Cart</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!---\n<div class=\"item\">\n    <a href=\"#\"><img class=\"item-image\" src=\"{{p.url}}\" alt=\"\" /></a>\n    <h6><a href=\"#\">{{p.productName}}</a></h6>\n    <hr />\n    <div class=\"item-price float-left\">${{p.productPrice}}</div>\n    <button class=\"btn float-right\"(click)=\"addToCart()\" >Add to Cart</button>\n   \n</div>\n-->\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}